{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/lygiadieu/Desktop/Maximilian Schwarzmu\\u0308ller/react-complete-guide-code-23-nextjs-introduction/code/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js\";\nimport { MongoClient, ObjectId } from 'mongodb';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://GiaDieu_Ly:Giadieu1988@cluster0.dzoke.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    // generate all paths (meetupId) dynamically.\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  // fetch data for a single meetup\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect('mongodb+srv://GiaDieu_Ly:Giadieu1988@cluster0.dzoke.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id\n      }\n    }\n  };\n}\n\nfunction MeetupDetails(props) {\n  const {\n    meetupData\n  } = props;\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: meetupData.image,\n    title: meetupData.title,\n    address: meetupData.address,\n    description: meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\nexport default MeetupDetails;","map":{"version":3,"sources":["/Users/lygiadieu/Desktop/Maximilian SchwarzmuÌˆller/react-complete-guide-code-23-nextjs-introduction/code/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MongoClient","ObjectId","MeetupDetail","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","props","meetupData","id","MeetupDetails","image","title","address","description"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AAEA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMJ,WAAW,CAACK,OAAZ,CACnB,qGADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAEL;AACAC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAZ;AADsB,KAAb,CAAZ;AAHF,GAAP;AAOD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C;AAEA,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACA,QAAMf,MAAM,GAAG,MAAMJ,WAAW,CAACK,OAAZ,CACnB,qGADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMe,cAAc,GAAG,MAAMhB,iBAAiB,CAACiB,OAAlB,CAA0B;AACrDb,IAAAA,GAAG,EAAEV,QAAQ,CAACkB,QAAD;AADwC,GAA1B,CAA7B;AAIAf,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACLY,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AACVC,QAAAA,EAAE,EAAEJ,cAAc,CAACZ;AADT;AADP;AADF,GAAP;AAOD;;AAED,SAASiB,aAAT,CAAuBH,KAAvB,EAA8B;AAC5B,QAAM;AAAEC,IAAAA;AAAF,MAAiBD,KAAvB;AACA,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEC,UAAU,CAACG,KADpB;AAEE,IAAA,KAAK,EAAEH,UAAU,CAACI,KAFpB;AAGE,IAAA,OAAO,EAAEJ,UAAU,CAACK,OAHtB;AAIE,IAAA,WAAW,EAAEL,UAAU,CAACM;AAJ1B;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;AAED,eAAeJ,aAAf","sourcesContent":["import { MongoClient, ObjectId } from 'mongodb'\nimport MeetupDetail from '../../components/meetups/MeetupDetail'\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\n    'mongodb+srv://GiaDieu_Ly:Giadieu1988@cluster0.dzoke.mongodb.net/meetups?retryWrites=true&w=majority',\n  )\n\n  const db = client.db()\n\n  const meetupsCollection = db.collection('meetups')\n\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray()\n\n  client.close()\n  return {\n    fallback: false,\n    // generate all paths (meetupId) dynamically.\n    paths: meetups.map((meetup) => ({\n      params: { meetupId: meetup._id.toString() },\n    })),\n  }\n}\n\nexport async function getStaticProps(context) {\n  // fetch data for a single meetup\n\n  const meetupId = context.params.meetupId\n  const client = await MongoClient.connect(\n    'mongodb+srv://GiaDieu_Ly:Giadieu1988@cluster0.dzoke.mongodb.net/meetups?retryWrites=true&w=majority',\n  )\n\n  const db = client.db()\n\n  const meetupsCollection = db.collection('meetups')\n\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId),\n  })\n\n  client.close()\n\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id,\n      },\n    },\n  }\n}\n\nfunction MeetupDetails(props) {\n  const { meetupData } = props\n  return (\n    <MeetupDetail\n      image={meetupData.image}\n      title={meetupData.title}\n      address={meetupData.address}\n      description={meetupData.description}\n    />\n  )\n}\n\nexport default MeetupDetails\n"]},"metadata":{},"sourceType":"module"}