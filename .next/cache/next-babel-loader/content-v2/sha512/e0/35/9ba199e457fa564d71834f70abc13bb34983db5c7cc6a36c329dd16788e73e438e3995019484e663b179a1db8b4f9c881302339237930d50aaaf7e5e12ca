{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/lygiadieu/Desktop/Maximilian Schwarzmu\\u0308ller/react-complete-guide-code-23-nextjs-introduction/code/06-onwards-to-a-bigger-project-starting-project/pages/index.js\";\nimport Head from 'next/head';\nimport { MongoClient } from 'mongodb';\nimport MeetupList from '../components/meetups/MeetupList';\n\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 10\n  }, this);\n}\n/* ----------------------------- getServerSideProps -------------------------- */\n\n/*\n - You cannot use getStaticPaths with getServerSideProps.\n - This function will not run during the build process, but instead always\n  on the server after deployment.\n - should only use if we need access to that concrete request object.\n - if data changes multiple times every second\n*/\n// export async function getServerSideProps(context) {\n//   const req = context.req\n//   const res = context.res\n//   // fetch data from an API\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS,\n//     },\n//   }\n// }\n\n/* ----------------------------- getStaticProps -------------------------- */\n\n/*\n  This function gets called at build time on server-side.\n  It may be called again, on a serverless function, if\n  revalidation is enabled and a new request comes in\n*/\n\n/*  Validation:\n    - Next.js will attempt to re-generate the page:\n    - When a request comes in\n    - At most once every 10 seconds\n    revalidate: 10, // In seconds\n    - if data changes multiple times every second, validate won't help us much.\n*/\n\n\nexport async function getStaticProps() {\n  // fetch data from an API\n  const client = await MongoClient.connect('mongodb+srv://GiaDieu_Ly:Giadieu1988@cluster0.dzoke.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString()\n      }))\n    },\n    revalidate: 1\n  };\n}\nexport default HomePage;","map":{"version":3,"sources":["/Users/lygiadieu/Desktop/Maximilian SchwarzmuÌˆller/react-complete-guide-code-23-nextjs-introduction/code/06-onwards-to-a-bigger-project-starting-project/pages/index.js"],"names":["Head","MongoClient","MeetupList","HomePage","props","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","find","toArray","close","map","meetup","title","address","image","id","_id","toString","revalidate"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,QAA4B,SAA5B;AACA,OAAOC,UAAP,MAAuB,kCAAvB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,eAAeC,cAAf,GAAgC;AACrC;AACA,QAAMC,MAAM,GAAG,MAAMN,WAAW,CAACO,OAAZ,CACnB,qGADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMN,OAAO,GAAG,MAAMK,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB;AAEAN,EAAAA,MAAM,CAACO,KAAP;AAEA,SAAO;AACLV,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAEA,OAAO,CAACU,GAAR,CAAaC,MAAD,KAAa;AAChCC,QAAAA,KAAK,EAAED,MAAM,CAACC,KADkB;AAEhCC,QAAAA,OAAO,EAAEF,MAAM,CAACE,OAFgB;AAGhCC,QAAAA,KAAK,EAAEH,MAAM,CAACG,KAHkB;AAIhCC,QAAAA,EAAE,EAAEJ,MAAM,CAACK,GAAP,CAAWC,QAAX;AAJ4B,OAAb,CAAZ;AADJ,KADF;AASLC,IAAAA,UAAU,EAAE;AATP,GAAP;AAWD;AAED,eAAepB,QAAf","sourcesContent":["import Head from 'next/head'\nimport { MongoClient } from 'mongodb'\nimport MeetupList from '../components/meetups/MeetupList'\n\nfunction HomePage(props) {\n  return <MeetupList meetups={props.meetups} />\n}\n\n/* ----------------------------- getServerSideProps -------------------------- */\n\n/*\n - You cannot use getStaticPaths with getServerSideProps.\n - This function will not run during the build process, but instead always\n  on the server after deployment.\n - should only use if we need access to that concrete request object.\n - if data changes multiple times every second\n*/\n\n// export async function getServerSideProps(context) {\n//   const req = context.req\n//   const res = context.res\n\n//   // fetch data from an API\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS,\n//     },\n//   }\n// }\n\n/* ----------------------------- getStaticProps -------------------------- */\n\n/*\n  This function gets called at build time on server-side.\n  It may be called again, on a serverless function, if\n  revalidation is enabled and a new request comes in\n*/\n\n/*  Validation:\n    - Next.js will attempt to re-generate the page:\n    - When a request comes in\n    - At most once every 10 seconds\n    revalidate: 10, // In seconds\n    - if data changes multiple times every second, validate won't help us much.\n*/\n\nexport async function getStaticProps() {\n  // fetch data from an API\n  const client = await MongoClient.connect(\n    'mongodb+srv://GiaDieu_Ly:Giadieu1988@cluster0.dzoke.mongodb.net/meetups?retryWrites=true&w=majority',\n  )\n\n  const db = client.db()\n\n  const meetupsCollection = db.collection('meetups')\n\n  const meetups = await meetupsCollection.find().toArray()\n\n  client.close()\n\n  return {\n    props: {\n      meetups: meetups.map((meetup) => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString(),\n      })),\n    },\n    revalidate: 1,\n  }\n}\n\nexport default HomePage\n"]},"metadata":{},"sourceType":"module"}